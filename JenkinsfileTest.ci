node {
    def mvnTool = tool 'Jenkins Maven'
    stage('Build') {
        snDevOpsStep()
        checkout scm
        sh "${mvnTool}/bin/mvn --version"
        sh "${mvnTool}/bin/mvn compile"   
    }

    stage('Test') {
        snDevOpsStep()
        sh "${mvnTool}/bin/mvn verify"
        sh "${mvnTool}/bin/mvn package"

        sshPublisher(continueOnError: false, failOnError: true,
        publishers: [
            sshPublisherDesc(
                configName:'CorpSite UAT',
                verbose: true,
                transfers: [
                    sshTransfer(
                        sourceFiles: 'target/globex-web.war',
                        removePrefix: 'target/',
                        remoteDirectory: '/opt/tomcat/webapps'
                    )
                ]
            )
        ])

        sh "${mvnTool}/bin/mvn compile"
        sh "${mvnTool}/bin/mvn verify"
        junit '**/target/surefire-reports/*.xml' 
        getCurrentBuildFailedTests("Test", "${env.BUILD_URL}", "${env.JOB_NAME}")
    }

    stage('Publish') {
        
        snDevOpsStep()
        snDevOpsChange()
        snDevOpsArtifact(artifactsPayload:"""{"artifacts": [{"name": "globex-web.war","version":"3.${env.BUILD_NUMBER}.0","semanticVersion": "3.${env.BUILD_NUMBER}.0","repositoryName": "Repo1"}]}""")
    }
    
}

@NonCPS
def getCurrentBuildFailedTests(String stageName, String jobUrl, String jobName) {
 echo "Into getCurrentBuildFailedTests: $stageName"
 def jsonObj = [: ]
 jsonObj.put("stageName", stageName)
 def build = currentBuild.build()
 def action = build.getActions(hudson.tasks.junit.TestResultAction.class)
 if (action) {
  def result = build.getAction(hudson.tasks.junit.TestResultAction.class).getResult();
  if (result) {
   jsonObj.put("name", result.getDisplayName())
   jsonObj.put("jobName", jobName)
   jsonObj.put("url", jobUrl)
   jsonObj.put("totalTests", result.getTotalCount())
   jsonObj.put("passedTests", result.getPassCount())
   jsonObj.put("failedTests", result.getFailCount())
   jsonObj.put("skippedTests", result.getSkipCount())
   jsonObj.put("duration", result.getDuration())
   jsonObj.put("buildNumber", env.BUILD_NUMBER)
   jsonObj.put("pipelineName", env.JOB_NAME)
   def json = new groovy.json.JsonBuilder(jsonObj)
   def response = ["curl", "-k", "-X", "POST", "-H", "Content-Type: application/json", "-d", "${json}", "https://devops.integration.user:devops@https://devopsoutsideintesting.service-now.com//api/sn_devops/v1/devops/tool/test?toolId=8587c1f6db538c10c93442c5059619c5&testType=Integration"].execute()
   response.waitFor()
   echo response.err.text
   echo response.text
 }
}
}
